<?xml version="1.0" encoding="UTF-8"?>
<!--
  ENCODED ARCHIVAL CONTEXT-CORPORATE BODIES, PERSONS, AND FAMILIES (EAC-CPF) SCHEMA
  
  SCHEMA TYPE: W3C Schema
  
  VERSION: 2010_revised
  
  DATE: 20181201
  
  EDITORS: Society of American Archivists Technical Subcommittee on Encoded Archival Standards (TS-EAS)
  
  PUBLISHER: Society of American Archivists in collaboration with the Staatsbibliothek zu Berlin
  
  PURPOSE: The EAC-CPF Schema is a communication standard for the description of corporate bodies,
  persons, and families. It is based on the International Council of Archives' International Standard 
  Archival Authority Record For Corporate Bodies, Persons and Families (ISAAR(CPF)). For additional
  documentation on the use of the standard, see the EAC-CPF Tag Library
  (http://eac.staatsbibliothek-berlin.de/schemata-and-tag-library/).
  
  Lead schema maintainer: Mark Custer
  
  **********
  RELEASE NOTES: The current release of the EAC-CPF is version 2010. 
  
  Changes in Version 2010_revised:
  
  1. The @accuracy attribute was corrected for the typo (@accuarcy).
           See https://github.com/SAA-SDT/eac-cpf-schema/issues/1
           (bug fix)

  2. The elements languageDeclaration, agencyName, eventDescription and sourceEntry are now repeatable.
          See https://github.com/SAA-SDT/eac-cpf-schema/issues/10
              https://github.com/SAA-SDT/eac-cpf-schema/issues/11
              https://github.com/SAA-SDT/eac-cpf-schema/issues/12
              https://github.com/SAA-SDT/eac-cpf-schema/issues/13
              
  3. The placeEntry element is now repeatable within each of the relation elements.
           See https:https://github.com/SAA-SDT/eac-cpf-schema/issues/17
           
  4. The new element rightsDeclaration has been added to the control section.
           See https://github.com/SAA-SDT/eac-cpf-schema/issues/46
           (new element)
  
  5. The data type for the attributes @otherAgencyCode and @preferredForm has been changed from xs:nmtoken to xs:token.
          See https://github.com/SAA-SDT/eac-cpf-schema/issues/16
              https://github.com/SAA-SDT/eac-cpf-schema/issues/19
              
  6. The @localType attribute has been added to the elements fromDate and toDate.
          See https://github.com/SAA-SDT/eac-cpf-schema/issues/31
  
  7. The maximum value restriction on the attributes @standardDate and @standardDateTime has been removed, years greater than 2999 are now possible.
          See https://github.com/SAA-SDT/eac-cpf-schema/issues/33
          
  8. New value 'unknown' is now available for @eventType and @agentType attributes.
          See https://github.com/SAA-SDT/eac-cpf-schema/issues/47
              https://github.com/SAA-SDT/eac-cpf-schema/issues/48
             
  9. New content is now available for the following elements:
          'published' for pucblicationStatus element
          'deletedMerged' for maintenanceStatus element
          See https://github.com/SAA-SDT/eac-cpf-schema/issues/49
              https://github.com/SAA-SDT/eac-cpf-schema/issues/50
  

  **********
  Comments, questions, and suggestions should be sent to Katherine Wisser, Chair of
  the TS-EAS (katherine.wisser@simmons.edu)
  
  with subject line: Schema Comment
  **********
    
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="urn:isbn:1-931666-33-4"
           xmlns="urn:isbn:1-931666-33-4"
           xmlns:xao="http://xerces.apache.org"
           xmlns:xlink="http://www.w3.org/1999/xlink"><!--
To customize the error messages that the Xerces or Saxon validation engines display for the <assert> and <assertion> elements, set the @message attribute on these elements.
For Xerces, the @message attribute has to belong to the http://xerces.apache.org namespace.
For Saxon, the @message attribute has to belong to the http://saxon.sf.net/ namespace. -->
  <xs:import namespace="http://www.w3.org/1999/xlink"
    schemaLocation="http://www.loc.gov/standards/xlink/xlink.xsd"/>
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://www.w3.org/2007/08/xml.xsd"/>
  
  <xs:element name="eac-cpf">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="control"/>
        <xs:choice>
          <xs:element ref="cpfDescription"/>
          <xs:element ref="multipleIdentities"/>
        </xs:choice>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute ref="xml:base"/>
      
      <xs:assert xpathDefaultNamespace="urn:isbn:1-931666-33-4"
       xao:message="&#xa; eac-cpf 0030 0034 0044 0056 0063&#xa; riferimenti in @vocabularySource senza corrispondeza univoca in control/conventionDeclaration/citation"
       test="
         every $v in (cpfDescription/description/((place/placeRole)|(localDescription/term))/@vocabularySource) satisfies
         count(control/conventionDeclaration/citation[normalize-space(lower-case($v))=normalize-space(lower-case(.))])=1
       "/>

    </xs:complexType>
  </xs:element>
  <xs:element name="cpfDescription">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="identity"/>
        <xs:element minOccurs="0" ref="description"/>
        <xs:element minOccurs="0" ref="relations"/>
        <xs:element minOccurs="0" ref="alternativeSet"/>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute ref="xml:base"/>
      
      <!-- 0025 0036 0047 built in? l'obbligatorietà su entityType è imposta dallo schema con la terna di valori corporateBody, family, person -->
      <xs:assert xpathDefaultNamespace="urn:isbn:1-931666-33-4"
       xao:message="&#xa; eac-cpf 0025 0036 0047&#xa; identity/entityType&#xa;La tipologia di scheda va dichiarata in identity/@localType con valore: soggettoProduttore."
       test="
        string-length(normalize-space(identity/@localType))>0
        and
        (
         every $v in (identity/entityType) satisfies
         (
              normalize-space(lower-case($v))='corporatebody'
          or (normalize-space(lower-case($v))='family' and normalize-space(lower-case($v/../@localType))='soggettoproduttore')
          or (normalize-space(lower-case($v))='person' and normalize-space(lower-case($v/../@localType))='soggettoproduttore')
         )
        )
       "/>
      <!-- 0025 con identity[entityType.='corporateBody'] identity/@localType può valere soggettoProduttore profiloIstituzionale contestoStoricoIstituzionale -->
      <xs:assert xpathDefaultNamespace="urn:isbn:1-931666-33-4"
       xao:message="&#xa; eac-cpf 0025&#xa; identity[entityType[.='corporatebody']]/@localType&#xa; 'Tipologia entità' è richiesto con valori:&#xa;
soggettoProduttore,
profiloIstituzionale,
contestoStoricoIstituzionale."
       test="
        not(identity[entityType[normalize-space(lower-case(.))='corporatebody']])
         or
        identity[entityType[normalize-space(lower-case(.))='corporatebody']]/@localType[
            normalize-space(lower-case(.))='soggettoproduttore'
         or normalize-space(lower-case(.))='profiloistituzionale'
         or normalize-space(lower-case(.))='contestostoricoistituzionale'
        ]
       "/>
        
      <xs:assert xpathDefaultNamespace="urn:isbn:1-931666-33-4"
       xao:message="&#xa; eac-cpf 0048&#xa; identity[@localType='soggettoProduttore'][entityType[.='person']]&#xa; richiede 'Cognome' in nameEntry/part[@localType='cognome']"
       test="
        not(identity[normalize-space(lower-case(@localType))='soggettoproduttore'][entityType[normalize-space(lower-case(.))='person']])
         or
        identity[normalize-space(lower-case(@localType))='soggettoproduttore'][entityType[normalize-space(lower-case(.))='person']]/
         nameEntry/
          part[normalize-space(lower-case(@localType))='cognome'][string-length(normalize-space(.))>0]
       "/><!-- 0048 -->
          
      <xs:assert xpathDefaultNamespace="urn:isbn:1-931666-33-4"
       xao:message="&#xa; eac-cpf 0037&#xa; identity[@localType='soggettoProduttore'][entityType[.='family']]&#xa; richiede 'Denominazione' in nameEntry/part[@localType='denominazione']"
       test="
        not(identity[normalize-space(lower-case(@localType))='soggettoproduttore'][entityType[normalize-space(lower-case(.))='family']])
         or
        identity[normalize-space(lower-case(@localType))='soggettoproduttore'][entityType[normalize-space(lower-case(.))='family']]/
         nameEntry/
          part[normalize-space(lower-case(@localType))='denominazione'][string-length(normalize-space(.))>0]
       "/><!-- 0037 -->
          
      <xs:assert xpathDefaultNamespace="urn:isbn:1-931666-33-4"
       xao:message="&#xa; eac-cpf 0026&#xa; identity[entityType[.='corporatebody']]&#xa; richiede 'Denominazione' in nameEntry/part"
       test="
        not(identity[entityType[normalize-space(lower-case(.))='corporatebody']])
         or
        identity[entityType[normalize-space(lower-case(.))='corporatebody']]/
         nameEntry[not(normalize-space(lower-case(@localType))='altradenominazione' or normalize-space(lower-case(@localType))='intestazioneparallela' or normalize-space(lower-case(@localType))='intestazione')]/
          part[string-length(normalize-space(.))>0]
       "/><!-- 0026 -->
      <!--
      <xs:assert xpathDefaultNamespace="urn:isbn:1-931666-33-4"
        test=" 
          (identity[@localType='soggettoProduttore'][entityType[normalize-space(lower-case(.))='person']]/
            nameEntry/
             part[@localType='cognome'][string-length(normalize-space(.))>0])
          or
          (identity[@localType='soggettoProduttore'][entityType[normalize-space(lower-case(.))='family']]/
            nameEntry/
             part[@localType='denominazione'][string-length(normalize-space(.))>0])
          or
          (identity[@localType='soggettoProduttore'][entityType[normalize-space(lower-case(.))='corporatebody']]/
            nameEntry[not(@localType='altraDenominazione' or @localType='intestazioneParallela' or @localType='intestazione')]/
             part[string-length(normalize-space(.))>0])
             "/> --><!-- 0026 0037 0048 in entityType family @localType='denominazione' è esplicitato nell'esempio -->

    </xs:complexType>
  </xs:element>
  <xs:element name="multipleIdentities">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="cpfDescription"/>
        <xs:element maxOccurs="unbounded" ref="cpfDescription"/>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute ref="xml:base"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="control">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="recordId"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="otherRecordId"/>
        <xs:element ref="maintenanceStatus"/>
        <xs:element minOccurs="0" ref="publicationStatus"/>
        <xs:element ref="maintenanceAgency"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="languageDeclaration"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="conventionDeclaration"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="rightsDeclaration"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="localTypeDeclaration"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="localControl"/>
        <xs:element ref="maintenanceHistory"/>
        <xs:element minOccurs="0" ref="sources"/>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute ref="xml:base"/>
      <!-- 0006 mandatory publicationStatus -->
      <xs:assert xpathDefaultNamespace="urn:isbn:1-931666-33-4"
       xao:message="&#xa; eac-cpf 0006&#xa; control/publicationStatus&#xa; 'Stato della scheda' è richiesto"
       test="
        count(publicationStatus)>0
       "/>
    </xs:complexType>
  </xs:element>
  <xs:element name="recordId">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:NMTOKEN">
          <xs:attribute ref="xml:id"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="otherRecordId">
    <xs:complexType mixed="true">
      <xs:attribute ref="xml:id"/>
      <xs:attributeGroup ref="m.id"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="maintenanceStatus">
    <xs:complexType>
      <xs:simpleContent>
        <xs:restriction base="xs:anyType">
          <xs:simpleType>
            <xs:restriction base="xs:token">
              <xs:enumeration value="revised"/>
              <xs:enumeration value="deleted"/>
              <xs:enumeration value="new"/>
              <xs:enumeration value="deletedSplit"/>
              <xs:enumeration value="deletedReplaced"/>
              <xs:enumeration value="deletedMerged"/>
              <xs:enumeration value="cancelled"/>
              <xs:enumeration value="derived"/>
            </xs:restriction>
          </xs:simpleType>
          <xs:attribute ref="xml:id"/>
        </xs:restriction>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="publicationStatus">
    <xs:complexType>
      <xs:simpleContent>
        <xs:restriction base="xs:anyType">
          <xs:simpleType>
            <xs:restriction base="xs:token">
              <xs:enumeration value="inProcess"/>
              <xs:enumeration value="approved"/>
              <xs:enumeration value="published"/>
            </xs:restriction>
          </xs:simpleType>
          <xs:attribute ref="xml:id"/>
        </xs:restriction>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="maintenanceAgency">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="agencyCode"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="otherAgencyCode"/>
        <xs:element maxOccurs="unbounded" ref="agencyName"/>
        <xs:element minOccurs="0" ref="descriptiveNote"/>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <!-- 0009 mandatory agencyCode Sigla dell'organizzazione -->
      <xs:assert xpathDefaultNamespace="urn:isbn:1-931666-33-4"
       xao:message="&#xa; eac-cpf 0009&#xa; maintenanceAgency/agencyCode&#xa; 'Sigla dell'organizzazione' è richiesto"
       test="
        string-length(normalize-space(agencyCode))>0
       "/>
    </xs:complexType>
  </xs:element>
  <xs:element name="agencyCode">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="m.data.standardRepository">
          <xs:attribute ref="xml:id"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="otherAgencyCode">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:token">
          <xs:attribute ref="xml:id"/>
          <xs:attributeGroup ref="a.localType"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="agencyName">
    <xs:complexType mixed="true">
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="maintenanceHistory">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="maintenanceEvent"/>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="maintenanceEvent">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="eventType"/>
        <xs:element ref="eventDateTime"/>
        <xs:element ref="agentType"/>
        <xs:element ref="agent"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="eventDescription"/>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="eventType">
    <xs:complexType>
      <xs:simpleContent>
        <xs:restriction base="xs:anyType">
          <xs:simpleType>
            <xs:restriction base="xs:token">
              <xs:enumeration value="created"/>
              <xs:enumeration value="revised"/>
              <xs:enumeration value="deleted"/>
              <xs:enumeration value="cancelled"/>
              <xs:enumeration value="derived"/>
              <xs:enumeration value="updated"/>
              <xs:enumeration value="unknown"/>
            </xs:restriction>
          </xs:simpleType>
          <xs:attribute ref="xml:id"/>
        </xs:restriction>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="eventDateTime">
    <xs:complexType mixed="true">
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute name="standardDateTime" type="m.data.standardDateTime"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="agentType">
    <xs:complexType>
      <xs:simpleContent>
        <xs:restriction base="xs:anyType">
          <xs:simpleType>
            <xs:restriction base="xs:token">
              <xs:enumeration value="human"/>
              <xs:enumeration value="machine"/>
              <xs:enumeration value="unknown"/>
            </xs:restriction>
          </xs:simpleType>
          <xs:attribute ref="xml:id"/>
          <!-- 0023 xs:enumeration value="unknown" -->
          <xs:assert xpathDefaultNamespace="urn:isbn:1-931666-33-4"
           xao:message="&#xa; eac-cpf 0023&#xa; control/maintenanceHistory/maintenanceEvent/agentType&#xa; 'Tipologia dell'agente' lista chiusa con valori:&#xa;
human,
machine."
           test="
            normalize-space(lower-case(.))='human'
            or 
            normalize-space(lower-case(.))='machine'
           "/>
        </xs:restriction>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="agent">
    <xs:complexType mixed="true">
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="eventDescription">
    <xs:complexType mixed="true">
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="languageDeclaration">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="language"/>
        <xs:element ref="script"/>
        <xs:element minOccurs="0" ref="descriptiveNote"/>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="conventionDeclaration">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="abbreviation"/>
        <xs:element ref="citation"/>
        <xs:element minOccurs="0" ref="descriptiveNote"/>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="rightsDeclaration">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="abbreviation"/>
        <xs:element ref="citation"/>
        <xs:element minOccurs="0" ref="descriptiveNote"/>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute name="localType" type="xs:anyURI"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="localTypeDeclaration">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="abbreviation"/>
        <xs:element ref="citation"/>
        <xs:element minOccurs="0" ref="descriptiveNote"/>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="abbreviation">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:token">
          <xs:attribute ref="xml:id"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="localControl">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="term"/>
        <xs:choice minOccurs="0">
          <xs:element ref="date"/>
          <xs:element ref="dateRange"/>
        </xs:choice>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attributeGroup ref="a.localType"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="sources">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="source"/>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute ref="xml:base"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="source">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="sourceEntry"/>
        <xs:choice minOccurs="0">
          <xs:element ref="objectXMLWrap"/>
          <xs:element ref="objectBinWrap"/>
        </xs:choice>
        <xs:element minOccurs="0" ref="descriptiveNote"/>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute name="lastDateTimeVerified" type="m.data.standardDateTime"/>
      <xs:attributeGroup ref="xlink:simpleLink"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="sourceEntry">
    <xs:complexType mixed="true">
      <xs:attribute ref="xml:id"/>
      <xs:attributeGroup ref="m.entryLanguageAttributes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="identity">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="entityId"/>
        <xs:element ref="entityType"/>
        <xs:choice maxOccurs="unbounded">
          <xs:element ref="nameEntryParallel"/>
          <xs:element name="nameEntry">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" ref="part"/>
                <xs:element minOccurs="0" ref="useDates"/>
                <xs:group ref="m.nameEntryAuthorizedorAlternative"/>
              </xs:sequence>
              <xs:attribute ref="xml:id"/>
              <xs:attributeGroup ref="m.entryLanguageAttributes"/>
              <xs:attribute name="localType" type="xs:anyURI"/>
            </xs:complexType>
          </xs:element>
        </xs:choice>
        <xs:element minOccurs="0" ref="descriptiveNote"/>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute ref="xml:base"/>
      <xs:attribute name="localType" type="xs:anyURI"/>
      <xs:attribute name="identityType">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="given"/>
            <xs:enumeration value="acquired"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      
      <xs:assert xpathDefaultNamespace="urn:isbn:1-931666-33-4"
       xao:message="&#xa; eac-cpf 0028 0029&#xa; identity/entityType[.='corporateBody'] ammette in identity/nameEntry/@localType i valori:&#xa;
altraDenominazione,
intestazione,
intestazioneParallela."
       test="
        not(normalize-space(lower-case(entityType)) = 'corporatebody')
        or
        (
         every $v in (nameEntry/@localType) satisfies
         (
             normalize-space(lower-case($v))='altradenominazione'
          or normalize-space(lower-case($v))='intestazione'
          or normalize-space(lower-case($v))='intestazioneparallela'
         )
        )
       "/>

      <xs:assert xpathDefaultNamespace="urn:isbn:1-931666-33-4"
       xao:message="&#xa; eac-cpf 0037 0039 0040&#xa; identity/entityType[.='family'] ammette in identity/nameEntry/part/@localType i valori:&#xa;
denominazione,
altraDenominazione,
intestazione,
intestazioneParallela."
       test="
        not(normalize-space(lower-case(entityType)) = 'family')
        or
        (
         every $v in (nameEntry/part/@localType) satisfies
         (
             normalize-space(lower-case($v))='denominazione'
          or normalize-space(lower-case($v))='altradenominazione'
          or normalize-space(lower-case($v))='intestazioneparallela'
          or normalize-space(lower-case($v))='intestazione'
         )
        )
       "/>
       
      <xs:assert xpathDefaultNamespace="urn:isbn:1-931666-33-4"
       xao:message="&#xa; eac-cpf 0049 0050 0051 0052 0053&#xa; identity/entityType[.='person'] ammette in identity/nameEntry/part/@localType i valori:&#xa;
cognome,
nome,
patronimico,
provenienza,
soprannome,
pseudonimo,
intestazioneParallela,
intestazione."
       test="
        not(normalize-space(lower-case(entityType)) = 'person')
        or
        (
         every $v in (nameEntry/part/@localType) satisfies
         (
             normalize-space(lower-case($v))='cognome'
          or normalize-space(lower-case($v))='nome'
          or normalize-space(lower-case($v))='patronimico'
          or normalize-space(lower-case($v))='provenienza'
          or normalize-space(lower-case($v))='soprannome'
          or normalize-space(lower-case($v))='pseudonimo'
          or normalize-space(lower-case($v))='intestazione'
          or normalize-space(lower-case($v))='intestazioneparallela'
         )
        )
       "/>

    </xs:complexType>
  </xs:element>
  <xs:element name="entityId">
    <xs:complexType mixed="true">
      <xs:attribute ref="xml:id"/>
      <xs:attributeGroup ref="m.id"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="entityType">
    <xs:complexType>
      <xs:simpleContent>
        <xs:restriction base="xs:anyType">
          <xs:simpleType>
            <xs:restriction base="xs:token">
              <xs:enumeration value="person"/>
              <xs:enumeration value="corporateBody"/>
              <xs:enumeration value="family"/>
            </xs:restriction>
          </xs:simpleType>
          <xs:attribute ref="xml:id"/>
        </xs:restriction>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="part">
    <xs:complexType mixed="true">
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute name="localType" type="xs:anyURI"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="useDates">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="m.dates"/>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="nameEntryParallel">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="nameEntry"/>
        <xs:element maxOccurs="unbounded" ref="nameEntry"/>
        <xs:element minOccurs="0" ref="useDates"/>
        <xs:group ref="m.nameEntryAuthorizedorAlternative"/>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute name="localType" type="xs:anyURI"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="nameEntry">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="part"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="preferredForm"/>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attributeGroup ref="m.entryLanguageAttributes"/>
      <xs:attribute name="localType" type="xs:anyURI"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="preferredForm">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:token">
          <xs:attribute ref="xml:id"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:group name="m.nameEntryAuthorizedorAlternative">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="authorizedForm"/>
        <xs:element ref="alternativeForm"/>
      </xs:choice>
    </xs:sequence>
  </xs:group>
  <xs:element name="authorizedForm">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:NMTOKEN">
          <xs:attribute ref="xml:id"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="alternativeForm">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:NMTOKEN">
          <xs:attribute ref="xml:id"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="description">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="existDates"/>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="places"/>
          <xs:element ref="place"/>
          <xs:element ref="localDescription"/>
          <xs:element ref="localDescriptions"/>
          <xs:element ref="legalStatus"/>
          <xs:element ref="legalStatuses"/>
          <xs:element ref="function"/>
          <xs:element ref="functions"/>
          <xs:element ref="languageUsed"/>
          <xs:element ref="languagesUsed"/>
          <xs:element ref="occupation"/>
          <xs:element ref="occupations"/>
          <xs:element ref="mandate"/>
          <xs:element ref="mandates"/>
          <xs:element ref="structureOrGenealogy"/>
          <xs:element ref="generalContext"/>
        </xs:choice>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="biogHist"/>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute ref="xml:base"/>
      
      <xs:assert xpathDefaultNamespace="urn:isbn:1-931666-33-4"
       xao:message="&#xa; eac-cpf 0034&#xa; identity/entityType[.='corporateBody'] ammette in cpfDescription/description/(.|localDescriptions)/localDescription/@localType i valori:&#xa;
tipologiaEnte."
       test="
        not(normalize-space(lower-case(../identity/entityType)) = 'corporatebody')
        or
        (
         every $v in ((.|localDescriptions)/localDescription/@localType) satisfies
         (
          normalize-space(lower-case($v))='tipologiaente'
         )
        )
       "/>

      <xs:assert xpathDefaultNamespace="urn:isbn:1-931666-33-4"
       xao:message="&#xa; eac-cpf 0034&#xa; identity/entityType[.='family'] ammette in cpfDescription/description/(.|localDescriptions)/localDescription/@localType i valori:&#xa;
titoli."
       test="
        not(normalize-space(lower-case(../identity/entityType)) = 'family')
        or
        (
         every $v in ((.|localDescriptions)/localDescription/@localType) satisfies
         (
          normalize-space(lower-case($v))='titoli'
         )
        )
       "/>
      
      <xs:assert xpathDefaultNamespace="urn:isbn:1-931666-33-4"
       xao:message="&#xa; eac-cpf 0054 0063&#xa; identity/entityType[.='person'] ammette in cpfDescription/description/(.|localDescriptions)/localDescription/@localType i valori:&#xa;
genere,
professione,
titoloNobiliare."
       test="
        not(normalize-space(lower-case(../identity/entityType)) = 'person')
        or
        (
         every $v in ((.|localDescriptions)/localDescription/@localType) satisfies
         (
             normalize-space(lower-case($v))='genere'
          or normalize-space(lower-case($v))='professione'
          or normalize-space(lower-case($v))='titolonobiliare'
         )
        )
       "/>

      <xs:assert xpathDefaultNamespace="urn:isbn:1-931666-33-4"
       xao:message="&#xa; eac-cpf 0054&#xa; cpfDescription/description/(.|localDescriptions)/localDescription[@localType='genere']/term&#xa; 'Sesso' lista chiusa con valori:&#xa;
maschile,
femminile."
       test="
        not(normalize-space(lower-case(../identity/entityType)) = 'person')
        or
        (
         every $v in ((.|localDescriptions)/localDescription[@localType='genere']/term) satisfies
         (
             normalize-space(lower-case($v))='maschile'
          or normalize-space(lower-case($v))='femminile'
         )
        )
       "/>

      <xs:assert xpathDefaultNamespace="urn:isbn:1-931666-33-4"
       xao:message="&#xa; eac-cpf 0054&#xa; cpfDescription/description/(.|localDescriptions)/localDescription[@localType='genere']/term&#xa; 'Sesso' non è ripetibile"
       test="
        not(normalize-space(lower-case(../identity/entityType)) = 'person')
        or
        count((.|localDescriptions)/localDescription[@localType='genere']/term) &lt;= 1
       "/>

    </xs:complexType>
  </xs:element>
  
  <xs:element name="existDates">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="m.dates"/>
        <xs:element minOccurs="0" ref="descriptiveNote"/>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute name="localType" type="xs:anyURI"/>

      <xs:assert xpathDefaultNamespace="urn:isbn:1-931666-33-4"
       xao:message="&#xa; eac-cpf 0041&#xa; identity/entityType[.='family'] ammette in cpfDescription/description/existDates/(dateRange|date|(dateSet/date)|(dateSet/dateRange))/@localType i valori univoci:&#xa;
dataRemota,
dataRecente,
secoloRemoto,
secoloRecente."
       test="
        not(normalize-space(lower-case(../../identity/entityType)) = 'family')
        or
        (
         (
          every $v in ((dateRange|date|(dateSet/date)|(dateSet/dateRange))/@localType) satisfies
          (
              normalize-space(lower-case($v))='dataremota'
           or normalize-space(lower-case($v))='datarecente'
           or normalize-space(lower-case($v))='secoloremoto'
           or normalize-space(lower-case($v))='secolorecente'
          )
         )
         and
         (
              count((dateRange|date|(dateSet/date)|(dateSet/dateRange))/@localType[normalize-space(lower-case(.))='dataremota'   ]) &lt;=1
          and count((dateRange|date|(dateSet/date)|(dateSet/dateRange))/@localType[normalize-space(lower-case(.))='datarecente'  ]) &lt;=1
          and count((dateRange|date|(dateSet/date)|(dateSet/dateRange))/@localType[normalize-space(lower-case(.))='secoloremoto' ]) &lt;=1
          and count((dateRange|date|(dateSet/date)|(dateSet/dateRange))/@localType[normalize-space(lower-case(.))='secolorecente']) &lt;=1
         )
        )
       "/>

      <xs:assert xpathDefaultNamespace="urn:isbn:1-931666-33-4"
       xao:message="&#xa; eac-cpf 0061 0062&#xa; identity/entityType[.='family'] ammette in cpfDescription/description/existDates/descriptiveNote/p/span/@localType i valori univoci:&#xa;
specificaSecoloRemoto,
specificaSecoloRecente,
validitaEstremoRemoto,
validitaEstremoRecente."
       test="
        not(normalize-space(lower-case(../../identity/entityType)) = 'family')
        or
        (
         (
          every $v in (descriptiveNote/p/span/@localType) satisfies
          (
              normalize-space(lower-case($v))='specificasecoloremoto'
           or normalize-space(lower-case($v))='specificasecolorecente'
           or normalize-space(lower-case($v))='validitaestremoremoto'
           or normalize-space(lower-case($v))='validitaestremorecente'
          )
         )
         and
         (
              count(descriptiveNote/p/span/@localType[normalize-space(lower-case(.))='specificasecoloremoto' ]) &lt;=1
          and count(descriptiveNote/p/span/@localType[normalize-space(lower-case(.))='specificasecolorecente']) &lt;=1
          and count(descriptiveNote/p/span/@localType[normalize-space(lower-case(.))='validitaestremoremoto'  ]) &lt;=1
          and count(descriptiveNote/p/span/@localType[normalize-space(lower-case(.))='validitaestremorecente' ]) &lt;=1
         )
        )
       "/>

      <xs:assert xpathDefaultNamespace="urn:isbn:1-931666-33-4"
       xao:message="&#xa; eac-cpf 0058 0059&#xa; identity/entityType[.='person'] ammette in cpfDescription/description/existDates/(dateRange|date|(dateSet/date)|(dateSet/dateRange))/@localType i valori univoci:&#xa;
dataDiNascita,
dataDiMorte,
secoloDiNascita,
secoloDiMorte."
       test="
        not(normalize-space(lower-case(../../identity/entityType)) = 'person')
        or
        (
         (
          every $v in ((dateRange|date|(dateSet/date)|(dateSet/dateRange))/@localType) satisfies
          (
              normalize-space(lower-case($v))='datadinascita'
           or normalize-space(lower-case($v))='datadimorte'
           or normalize-space(lower-case($v))='secolodinascita'
           or normalize-space(lower-case($v))='secolodimorte'
          )
         )
         and
         (
              count((dateRange|date|(dateSet/date)|(dateSet/dateRange))/@localType[normalize-space(lower-case(.))='datadinascita'  ]) &lt;=1
          and count((dateRange|date|(dateSet/date)|(dateSet/dateRange))/@localType[normalize-space(lower-case(.))='datadimorte'    ]) &lt;=1
          and count((dateRange|date|(dateSet/date)|(dateSet/dateRange))/@localType[normalize-space(lower-case(.))='secolodinascita']) &lt;=1
          and count((dateRange|date|(dateSet/date)|(dateSet/dateRange))/@localType[normalize-space(lower-case(.))='secolodimorte'  ]) &lt;=1
         )
        )
       "/>
      
      <xs:assert xpathDefaultNamespace="urn:isbn:1-931666-33-4"
       xao:message="&#xa; eac-cpf 0061 0062&#xa; identity/entityType[.='person'] ammette in cpfDescription/description/existDates/descriptiveNote/p/span/@localType i valori univoci:&#xa;
specificaDataNascita,
specificaDataMorte,
validitaDataNascita,
validitaDataMorte."
       test="
        not(normalize-space(lower-case(../../identity/entityType)) = 'person')
        or
        (
         (
          every $v in (descriptiveNote/p/span/@localType) satisfies
          (
              normalize-space(lower-case($v))='specificadatanascita'
           or normalize-space(lower-case($v))='specificadatamorte'
           or normalize-space(lower-case($v))='validitadatanascita'
           or normalize-space(lower-case($v))='validitadatamorte'
          )
         )
         and
         (
              count(descriptiveNote/p/span/@localType[normalize-space(lower-case(.))='specificadatanascita']) &lt;=1
          and count(descriptiveNote/p/span/@localType[normalize-space(lower-case(.))='specificadatamorte'  ]) &lt;=1
          and count(descriptiveNote/p/span/@localType[normalize-space(lower-case(.))='validitadatanascita' ]) &lt;=1
          and count(descriptiveNote/p/span/@localType[normalize-space(lower-case(.))='validitadatamorte'   ]) &lt;=1
         )
        )
       "/>

    </xs:complexType>
  </xs:element>
  <xs:element name="places">
    <xs:complexType>
      <xs:choice>
        <xs:sequence>
          <xs:element maxOccurs="unbounded" ref="place"/>
          <xs:element minOccurs="0" ref="descriptiveNote"/>
        </xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="m.discursiveSet"/>
      </xs:choice>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute name="localType" type="xs:anyURI"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="localDescriptions">
    <xs:complexType>
      <xs:choice>
        <xs:sequence>
          <xs:element maxOccurs="unbounded" ref="localDescription"/>
          <xs:element minOccurs="0" ref="descriptiveNote"/>
        </xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="m.discursiveSet"/>
      </xs:choice>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attributeGroup ref="a.localType"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="languagesUsed">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="languageUsed"/>
        <xs:element minOccurs="0" ref="descriptiveNote"/>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute name="localType" type="xs:anyURI"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="legalStatuses">
    <xs:complexType>
      <xs:choice>
        <xs:sequence>
          <xs:element maxOccurs="unbounded" ref="legalStatus"/>
          <xs:element minOccurs="0" ref="descriptiveNote"/>
        </xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="m.discursiveSet"/>
      </xs:choice>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute name="localType" type="xs:anyURI"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="occupations">
    <xs:complexType>
      <xs:choice>
        <xs:sequence>
          <xs:element maxOccurs="unbounded" ref="occupation"/>
          <xs:element minOccurs="0" ref="descriptiveNote"/>
        </xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="m.discursiveSet"/>
      </xs:choice>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute name="localType" type="xs:anyURI"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="functions">
    <xs:complexType>
      <xs:choice>
        <xs:sequence>
          <xs:element maxOccurs="unbounded" ref="function"/>
          <xs:element minOccurs="0" ref="descriptiveNote"/>
        </xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="m.discursiveSet"/>
      </xs:choice>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute name="localType" type="xs:anyURI"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="mandates">
    <xs:complexType>
      <xs:choice>
        <xs:sequence>
          <xs:element maxOccurs="unbounded" ref="mandate"/>
          <xs:element minOccurs="0" ref="descriptiveNote"/>
        </xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="m.discursiveSet"/>
      </xs:choice>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute name="localType" type="xs:anyURI"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="m.discursiveSet" abstract="true"/>
  <xs:element name="place">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="placeRole"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="placeEntry"/>
        <xs:element minOccurs="0" ref="address"/>
        <xs:element minOccurs="0" ref="m.dates"/>
        <xs:element minOccurs="0" ref="citation"/>
        <xs:element minOccurs="0" ref="descriptiveNote"/>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute name="localType" type="xs:anyURI"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="address">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="addressLine"/>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute name="localType" type="xs:anyURI"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="addressLine">
    <xs:complexType mixed="true">
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute name="localType" type="xs:anyURI"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="placeEntry">
    <xs:complexType mixed="true">
      <xs:attribute ref="xml:id"/>
      <xs:attributeGroup ref="m.entryLanguageAttributes"/>
      <xs:attribute name="localType" type="xs:anyURI"/>
      <xs:attribute name="countryCode">
        <xs:simpleType>
          <xs:union>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:pattern value="[A-Z]{2}"/>
              </xs:restriction>
            </xs:simpleType>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:pattern value="[A-Z]{4}"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:union>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="vocabularySource" type="xs:anyURI"/>
      <xs:attribute name="accuracy"/>
      <xs:attribute name="longitude" type="xs:NMTOKEN"/>
      <xs:attribute name="latitude" type="xs:NMTOKEN"/>
      <xs:attribute name="altitude" type="xs:NMTOKEN"/>
      
      <xs:assert xpathDefaultNamespace="urn:isbn:1-931666-33-4"
       xao:message="&#xa; eac-cpf 0030 0044 0056&#xa; cpfDescription/description/place/placeEntry/@localType ammette i valori:&#xa;
historicalName,
presentName."
       test="
         every $v in @localType satisfies
         (
             normalize-space(lower-case($v))='historicalname'
          or normalize-space(lower-case($v))='presentname'
         )
       "/>
      
    </xs:complexType>
  </xs:element>
  <xs:element name="localDescription">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="m.simpleDescription">
          <xs:attribute ref="xml:id"/>
          <xs:attribute ref="xml:lang"/>
          <xs:attributeGroup ref="a.localType"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="languageUsed">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="language"/>
        <xs:element ref="script"/>
        <xs:element minOccurs="0" ref="descriptiveNote"/>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute name="localType" type="xs:anyURI"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="legalStatus">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="m.simpleDescription">
          <xs:attribute ref="xml:id"/>
          <xs:attribute ref="xml:lang"/>
          <xs:attribute name="localType" type="xs:anyURI"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="occupation">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="m.simpleDescription">
          <xs:attribute ref="xml:id"/>
          <xs:attribute ref="xml:lang"/>
          <xs:attribute name="localType" type="xs:anyURI"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="function">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="m.simpleDescription">
          <xs:attribute ref="xml:id"/>
          <xs:attribute ref="xml:lang"/>
          <xs:attribute name="localType" type="xs:anyURI"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="mandate">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="m.simpleDescription">
          <xs:attribute ref="xml:id"/>
          <xs:attribute ref="xml:lang"/>
          <xs:attribute name="localType" type="xs:anyURI"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="m.simpleDescription">
    <xs:sequence>
      <xs:element minOccurs="0" ref="term"/>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="placeEntry"/>
      <xs:element minOccurs="0" ref="m.dates"/>
      <xs:element minOccurs="0" ref="citation"/>
      <xs:element minOccurs="0" ref="descriptiveNote"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="placeRole">
    <xs:complexType mixed="true">
      <xs:attribute ref="xml:id"/>
      <xs:attributeGroup ref="m.entryLanguageAttributes"/>
      <xs:attribute name="lastDateTimeVerified" type="m.data.standardDateTime"/>
      <xs:attribute name="vocabularySource" type="xs:anyURI"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="structureOrGenealogy">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="m.discursiveSet"/>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute name="localType" type="xs:anyURI"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="generalContext">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="m.discursiveSet"/>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute name="localType" type="xs:anyURI"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="biogHist">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="abstract"/>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="chronList"/>
          <xs:element ref="list"/>
          <xs:element ref="p"/>
          <xs:element ref="outline"/>
          <xs:element ref="citation"/>
        </xs:choice>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute name="localType" type="xs:anyURI"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="abstract">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="m.mixedContent">
          <xs:attribute ref="xml:id"/>
          <xs:attribute ref="xml:lang"/>
          <xs:attribute name="localType" type="xs:anyURI"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="relations">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="cpfRelation"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="resourceRelation"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="functionRelation"/>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute ref="xml:base"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="relationEntry">
    <xs:complexType mixed="true">
      <xs:attribute ref="xml:id"/>
      <xs:attribute name="localType" type="xs:anyURI"/>
      <xs:attributeGroup ref="m.entryLanguageAttributes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="objectXMLWrap">
    <xs:complexType>
      <xs:group ref="e.anyName"/>
      <xs:attribute ref="xml:id"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="objectBinWrap">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:base64Binary">
          <xs:attribute ref="xml:id"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="m.relationBody">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="relationEntry"/>
      <xs:choice minOccurs="0">
        <xs:element ref="objectXMLWrap"/>
        <xs:element ref="objectBinWrap"/>
      </xs:choice>
      <xs:element minOccurs="0" ref="m.dates"/>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="placeEntry"/>
      <xs:element minOccurs="0" ref="descriptiveNote"/>
    </xs:sequence>
    <xs:attribute name="lastDateTimeVerified" type="m.data.standardDateTime"/>
    <xs:attributeGroup ref="xlink:simpleLink"/>
  </xs:complexType>
  <xs:element name="cpfRelation">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="m.relationBody">
          <xs:attribute ref="xml:id"/>
          <xs:attribute ref="xml:lang"/>
          <xs:attribute name="cpfRelationType">
            <xs:simpleType>
              <xs:restriction base="xs:token">
                <xs:enumeration value="identity"/>
                <xs:enumeration value="hierarchical"/>
                <xs:enumeration value="hierarchical-parent"/>
                <xs:enumeration value="hierarchical-child"/>
                <xs:enumeration value="temporal"/>
                <xs:enumeration value="temporal-earlier"/>
                <xs:enumeration value="temporal-later"/>
                <xs:enumeration value="family"/>
                <xs:enumeration value="associative"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>

          <xs:assert xpathDefaultNamespace="urn:isbn:1-931666-33-4"
           xao:message="&#xa; eac-cpf 0067 0068 0069&#xa; relations/cpfRelation[@cpfRelationType='identity'] ammette in relationEntry/@localType i valori:&#xa;
profiloIstituzionale,
contestoStoricoIstituzionale,
soggettoProduttore."
           test="
             (not(@cpfRelationType) or not(@cpfRelationType='identity'))
             or
             (
              every $v in relationEntry/@localType satisfies
              (
                  normalize-space(lower-case($v))='profiloistituzionale'
               or normalize-space(lower-case($v))='contestostoricoistituzionale'
               or normalize-space(lower-case($v))='soggettoproduttore'
              )
             )
           "/>

          <xs:assert xpathDefaultNamespace="urn:isbn:1-931666-33-4"
           xao:message="&#xa; eac-cpf 0069&#xa; relations/cpfRelation[not(@cpfRelationType='identity')] ammette in relationEntry/@localType il valore:&#xa;
soggettoProduttore."
           test="
             (not(@cpfRelationType) or @cpfRelationType='identity')
             or
             (
              every $v in relationEntry/@localType satisfies
              (
               normalize-space(lower-case($v))='soggettoproduttore'
              )
             )
           "/>
          <!--  rimossa obbligatorietà @xlink:href -->
          <xs:assert xpathDefaultNamespace="urn:isbn:1-931666-33-4"
           xao:message="&#xa; eac-cpf 0069&#xa; relations/cpfRelation[@cpfRelationType]/relationEntry[@localType='soggettoProduttore'] richiede contenuto e tipo relazione"
           test="
              every $v in relationEntry[normalize-space(lower-case(@localType))='soggettoproduttore'] satisfies
              (
               string-length(normalize-space($v)) &gt;0 and string-length(normalize-space($v/../@cpfRelationType)) &gt;0
              )
           "/>
          <xs:assert xpathDefaultNamespace="urn:isbn:1-931666-33-4"
           xao:message="&#xa; eac-cpf 0067 0068&#xa; relations/cpfRelation[@cpfRelationType='identity']/relationEntry[@localType='profiloIstituzionale' or @localType='contestoStoricoIstituzionale'] richiede contenuto"
           test="
             (not(@cpfRelationType) or not(@cpfRelationType='identity'))
             or
             (
              every $v in relationEntry[normalize-space(lower-case(@localType))='profiloistituzionale' or normalize-space(lower-case(@localType))='contestostoricoistituzionale'] satisfies
              (
               string-length(normalize-space($v)) &gt;0
              )
             )
           "/>
          <!--  obbligatorietà @xlink:href
          <xs:assert xpathDefaultNamespace="urn:isbn:1-931666-33-4"
           xao:message="&#xa; eac-cpf 0069&#xa; relations/cpfRelation[@cpfRelationType]/relationEntry[@localType='soggettoProduttore'] richiede contenuto e ../@xlink:href"
           test="
              every $v in relationEntry[normalize-space(lower-case(@localType))='soggettoproduttore'] satisfies
              (
               string-length(normalize-space($v)) &gt;0 and string-length(normalize-space($v/../@cpfRelationType)) &gt;0 and string-length(normalize-space($v/../@xlink:href)) &gt;0
              )
           "/>
          <xs:assert xpathDefaultNamespace="urn:isbn:1-931666-33-4"
           xao:message="&#xa; eac-cpf 0067 0068&#xa; relations/cpfRelation[@cpfRelationType='identity']/relationEntry[@localType='profiloIstituzionale' or @localType='contestoStoricoIstituzionale'] richiede contenuto e ../@xlink:href"
           test="
             (not(@cpfRelationType) or not(@cpfRelationType='identity'))
             or
             (
              every $v in relationEntry[normalize-space(lower-case(@localType))='profiloistituzionale' or normalize-space(lower-case(@localType))='contestostoricoistituzionale'] satisfies
              (
               string-length(normalize-space($v)) &gt;0 and string-length(normalize-space($v/../@xlink:href)) &gt;0
              )
             )
           "/>
           -->
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="resourceRelation">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="m.relationBody">
          <xs:attribute ref="xml:id"/>
          <xs:attribute ref="xml:lang"/>
          <xs:attribute name="resourceRelationType">
            <xs:simpleType>
              <xs:restriction base="xs:token">
                <xs:enumeration value="creatorOf"/>
                <xs:enumeration value="subjectOf"/>
                <xs:enumeration value="other"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          
          <xs:assert xpathDefaultNamespace="urn:isbn:1-931666-33-4"
           xao:message="&#xa; eac-cpf 0065&#xa; relations/resourceRelation[@resourceRelationType='creatorOf'] ammette in relationEntry/@localType il valore:&#xa;
complesso."
           test="
             (not(@resourceRelationType) or not(@resourceRelationType='creatorOf'))
             or
              (
              every $v in relationEntry/@localType satisfies
              (
               normalize-space(lower-case($v))='complesso'
              )
             )
           "/>

          <xs:assert xpathDefaultNamespace="urn:isbn:1-931666-33-4"
           xao:message="&#xa; eac-cpf 0066 0070 0071 0072 0073 0075 0076&#xa; relations/resourceRelation[@resourceRelationType='other'] ammette in relationEntry/@localType i valori:&#xa;
ANAGRAFICA,
AMBITOTERRITORIALE,
BIBID,
BIBTEXT,
BIBURI,
BIBSBN,
FONTEID,
FONTETEXT,
FONTEURI,
URL,
TEMAURI,
TEMA,
SOGGETTO."
           test="
             (not(@resourceRelationType) or not(@resourceRelationType='other'))
             or
             (
              every $v in relationEntry/@localType satisfies
              (
                  normalize-space(lower-case($v))='anagrafica'
               or normalize-space(lower-case($v))='ambitoterritoriale'
               or normalize-space(lower-case($v))='bibid'
               or normalize-space(lower-case($v))='bibtext'
               or normalize-space(lower-case($v))='biburi'
               or normalize-space(lower-case($v))='bibsbn'
               or normalize-space(lower-case($v))='fonteid'
               or normalize-space(lower-case($v))='fontetext'
               or normalize-space(lower-case($v))='fonteuri'
               or normalize-space(lower-case($v))='url'
               or normalize-space(lower-case($v))='temauri'
               or normalize-space(lower-case($v))='tema'
               or normalize-space(lower-case($v))='soggetto'
              )
             )
           "/>
          <!--  rimossa obbligatorietà @xlink:href -->
          <xs:assert xpathDefaultNamespace="urn:isbn:1-931666-33-4"
           xao:message="&#xa; eac-cpf 0065&#xa; relations/resourceRelation[@resourceRelationType='creatorOf']/relationEntry[@localType='complesso'] richiede contenuto"
           test="
             (not(@resourceRelationType) or not(@resourceRelationType='creatorOf'))
             or
             (
              every $v in relationEntry[normalize-space(lower-case(@localType))='complesso'] satisfies
              (
               string-length(normalize-space($v)) &gt;0
              )
             )
           "/>
          <!--  rimossa obbligatorietà @xlink:href -->
          <xs:assert xpathDefaultNamespace="urn:isbn:1-931666-33-4"
           xao:message="&#xa; eac-cpf 0066 0071 0072 0075 0076&#xa; relations/resourceRelation[@resourceRelationType='other'] richiede contenuto per relationEntry/@localType
ANAGRAFICA,
AMBITOTERRITORIALE,
BIBID,
BIBTEXT,
BIBURI,
BIBSBN,
FONTEID,
FONTETEXT,
FONTEURI,
URL,
TEMAURI,
TEMA,
SOGGETTO."
           test="
             (not(@resourceRelationType) or not(@resourceRelationType='other'))
             or
             (
              every $v in relationEntry[
                  normalize-space(lower-case(@localType))='anagrafica'
               or normalize-space(lower-case(@localType))='ambitoterritoriale'
               or normalize-space(lower-case(@localType))='bibid'
               or normalize-space(lower-case(@localType))='bibtext'
               or normalize-space(lower-case(@localType))='biburi'
               or normalize-space(lower-case(@localType))='bibsbn'
               or normalize-space(lower-case(@localType))='fonteid'
               or normalize-space(lower-case(@localType))='fontetext'
               or normalize-space(lower-case(@localType))='fonteuri'
               or normalize-space(lower-case(@localType))='url'
               or normalize-space(lower-case(@localType))='temauri'
               or normalize-space(lower-case(@localType))='tema'
               or normalize-space(lower-case(@localType))='soggetto'
              ] satisfies
              (
               string-length(normalize-space($v)) &gt;0
              )
             )
           "/>
          <!-- obbligatorietà @xlink:href
          <xs:assert xpathDefaultNamespace="urn:isbn:1-931666-33-4"
           xao:message="&#xa; eac-cpf 0066 0071 0072 0075 0076&#xa; relations/resourceRelation[@resourceRelationType='other']/relationEntry[@localType='FONTEID' or @localType='FONTETEXT' or @localType='BIBID' or @localType='BIBTEXT' or @localType='TEMA' or @localType='SOGGETTO' or @localType='ANAGRAFICA' or @localType='AMBITOTERRITORIALE'] richiede contenuto"
           test="
             (not(@resourceRelationType) or not(@resourceRelationType='other'))
             or
             (
              every $v in relationEntry[
                  normalize-space(lower-case(@localType))='fonteid'
               or normalize-space(lower-case(@localType))='fontetext'
               or normalize-space(lower-case(@localType))='bibid'
               or normalize-space(lower-case(@localType))='bibtext'
               or normalize-space(lower-case(@localType))='tema'
               or normalize-space(lower-case(@localType))='soggetto'
               or normalize-space(lower-case(@localType))='anagrafica'
               or normalize-space(lower-case(@localType))='ambitoterritoriale'
              ] satisfies
              (
               string-length(normalize-space($v)) &gt;0
              )
             )
           "/>
          <xs:assert xpathDefaultNamespace="urn:isbn:1-931666-33-4"
           xao:message="&#xa; eac-cpf 0071 0072 0073 0075&#xa; relations/resourceRelation[@resourceRelationType='other']/relationEntry[@localType='URL' or @localType='FONTEURI' or @localType='BIBURI' or @localType='BIBSBN' or @localType='TEMAURI'] richiede contenuto e ../@xlink:href"
           test="
             (not(@resourceRelationType) or not(@resourceRelationType='other'))
             or
             (
              every $v in relationEntry[
                  normalize-space(lower-case(@localType))='url'
               or normalize-space(lower-case(@localType))='fonteuri'
               or normalize-space(lower-case(@localType))='biburi'
               or normalize-space(lower-case(@localType))='bibsbn'
               or normalize-space(lower-case(@localType))='temauri'
              ] satisfies
              (
               string-length(normalize-space($v)) &gt;0 and string-length(normalize-space($v/../@xlink:href)) &gt;0
              )
             )
           "/>
           -->
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="functionRelation">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="m.relationBody">
          <xs:attribute ref="xml:id"/>
          <xs:attribute ref="xml:lang"/>
          <xs:attribute name="functionRelationType">
            <xs:simpleType>
              <xs:restriction base="xs:token">
                <xs:enumeration value="controls"/>
                <xs:enumeration value="owns"/>
                <xs:enumeration value="performs"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="alternativeSet">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="setComponent"/>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute ref="xml:base"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="setComponent">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="componentEntry"/>
        <xs:choice minOccurs="0">
          <xs:element ref="objectXMLWrap"/>
          <xs:element ref="objectBinWrap"/>
        </xs:choice>
        <xs:element minOccurs="0" ref="descriptiveNote"/>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute name="lastDateTimeVerified" type="m.data.standardDateTime"/>
      <xs:attributeGroup ref="xlink:simpleLink"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="componentEntry">
    <xs:complexType mixed="true">
      <xs:attribute ref="xml:id"/>
      <xs:attribute name="localType" type="xs:anyURI"/>
      <xs:attributeGroup ref="m.entryLanguageAttributes"/>
    </xs:complexType>
  </xs:element>
  <xs:group name="e.anyName">
    <xs:sequence>
      <xs:any processContents="skip"/>
    </xs:sequence>
  </xs:group>
  <xs:group name="m.anything">
    <xs:sequence>
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="e.anyName"/>
    </xs:sequence>
  </xs:group>
  <xs:attributeGroup name="m.anything">
    <xs:anyAttribute processContents="skip"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="a.lastDateTimeVerified">
    <xs:attribute name="lastDateTimeVerified" use="required" type="m.data.standardDateTime"/>
  </xs:attributeGroup>
  <xs:simpleType name="m.data.standardDateTime">
    <xs:union memberTypes="xs:date xs:gYear xs:gYearMonth xs:dateTime"/>
  </xs:simpleType>
  <xs:simpleType name="m.data.standardDate">
    <xs:union memberTypes="xs:date xs:gYear xs:gYearMonth"/>
  </xs:simpleType>
  <xs:element name="date" substitutionGroup="m.dates">
    <xs:complexType mixed="true">
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute name="localType" type="xs:anyURI"/>
      <xs:attributeGroup ref="m.dateSingle"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="m.dateSingle">
    <xs:attribute name="standardDate" type="m.data.standardDate"/>
    <xs:attribute name="notBefore" type="m.data.standardDate"/>
    <xs:attribute name="notAfter" type="m.data.standardDate"/>
  </xs:attributeGroup>
  <xs:element name="dateRange" substitutionGroup="m.dates">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="fromDate"/>
        <xs:element minOccurs="0" ref="toDate"/>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute name="localType" type="xs:anyURI"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="fromDate">
    <xs:complexType mixed="true">
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute name="localType" type="xs:anyURI"/>
      <xs:attributeGroup ref="m.dateSingle"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="toDate">
    <xs:complexType mixed="true">
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute name="localType" type="xs:anyURI"/>
      <xs:attributeGroup ref="m.dateSingle"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="dateSet" substitutionGroup="m.dates">
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element ref="date"/>
          <xs:element ref="dateRange"/>
        </xs:choice>
        <xs:choice maxOccurs="unbounded">
          <xs:element ref="date"/>
          <xs:element ref="dateRange"/>
        </xs:choice>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute name="localType" type="xs:anyURI"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="m.dates" abstract="true"/>
  <xs:element name="language">
    <xs:complexType mixed="true">
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute name="languageCode" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="[a-z]{3}"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="script">
    <xs:complexType mixed="true">
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attributeGroup ref="a.scriptCode"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="a.scriptCode">
    <xs:attribute name="scriptCode" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:pattern value="[A-Z][a-z]{3}"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:attributeGroup name="a.transliteration">
    <xs:attribute name="transliteration" use="required" type="xs:NMTOKEN"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="m.entryLanguageAttributes">
    <xs:attribute name="scriptCode">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:pattern value="[A-Z][a-z]{3}"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute name="transliteration" type="xs:NMTOKEN"/>
  </xs:attributeGroup>
  <xs:simpleType name="m.data.standardRepository">
    <xs:restriction base="xs:token">
      <xs:pattern value="(([A-Z]{2})|([a-zA-Z]{1})|([a-zA-Z]{3,4}))(-[a-zA-Z0-9:/\-]{1,11})"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="term">
    <xs:complexType mixed="true">
      <xs:attribute ref="xml:id"/>
      <xs:attributeGroup ref="m.entryLanguageAttributes"/>
      <xs:attribute name="lastDateTimeVerified" type="m.data.standardDateTime"/>
      <xs:attribute name="vocabularySource" type="xs:anyURI"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="descriptiveNote">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="p"/>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="citation" substitutionGroup="m.discursiveSet">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="m.mixedContent">
          <xs:attribute ref="xml:id"/>
          <xs:attribute ref="xml:lang"/>
          <xs:attributeGroup ref="xlink:simpleLink"/>
          <xs:attribute name="lastDateTimeVerified" type="m.data.standardDateTime"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="m.id">
    <xs:attribute name="localType" type="xs:anyURI"/>
  </xs:attributeGroup>
  <xs:element name="p" substitutionGroup="m.discursiveSet">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="m.mixedContent">
          <xs:attribute ref="xml:id"/>
          <xs:attribute ref="xml:lang"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="m.mixedContent" mixed="true">
    <xs:group minOccurs="0" maxOccurs="unbounded" ref="e.span"/>
  </xs:complexType>
  <xs:element name="chronList">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="chronItem"/>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute name="localType" type="xs:anyURI"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="chronItem">
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element ref="date"/>
          <xs:element ref="dateRange"/>
        </xs:choice>
        <xs:element minOccurs="0" ref="placeEntry"/>
        <xs:element ref="event"/>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute name="localType" type="xs:anyURI"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="event">
    <xs:complexType mixed="true">
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute name="localType" type="xs:anyURI"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="list" substitutionGroup="m.discursiveSet">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="item"/>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute name="localType" type="xs:anyURI"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="item">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="m.mixedContent">
          <xs:attribute ref="xml:id"/>
          <xs:attribute ref="xml:lang"/>
          <xs:attribute name="localType" type="xs:anyURI"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="outline" substitutionGroup="m.discursiveSet">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="level"/>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute name="localType" type="xs:anyURI"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="level">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="item"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="level"/>
      </xs:sequence>
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute name="localType" type="xs:anyURI"/>
    </xs:complexType>
  </xs:element>
  <xs:group name="e.span">
    <xs:sequence>
      <xs:element minOccurs="0" ref="span"/>
    </xs:sequence>
  </xs:group>
  <xs:element name="span">
    <xs:complexType mixed="true">
      <xs:attribute ref="xml:id"/>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute name="localType" type="xs:anyURI"/>
      <xs:attribute name="style"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="a.localType">
    <xs:attribute name="localType" use="required" type="xs:anyURI"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="a.vocabularySource">
    <xs:attribute name="vocabularySource" use="required" type="xs:anyURI"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="a.style">
    <xs:attribute name="style" use="required"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="m.geographicalCoordinates">
    <xs:attribute name="longitude" use="required" type="xs:NMTOKEN"/>
    <xs:attribute name="latitude" use="required" type="xs:NMTOKEN"/>
    <xs:attribute name="altitude" type="xs:NMTOKEN"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="lang">
    <xs:attribute ref="xml:lang" use="required"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="base">
    <xs:attribute ref="xml:base" use="required"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="id">
    <xs:attribute ref="xml:id" use="required"/>
  </xs:attributeGroup>
</xs:schema>
